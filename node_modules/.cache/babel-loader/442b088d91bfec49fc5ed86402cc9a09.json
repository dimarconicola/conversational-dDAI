{"ast":null,"code":"/* global ga */\n\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object} pluginConfig - Plugin settings\n * @param {string} pluginConfig.trackingId - site tracking Id\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: '123-xyz'\n * })\n */\nfunction googleAnalytics() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Allow for userland overides of base methods\n\n  return {\n    NAMESPACE: 'google-analytics',\n    config: pluginConfig,\n    initialize: initialize$1,\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config;\n      var properties = payload.properties;\n      pageView$1(properties.path);\n    },\n    // Google Analytics track event\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign');\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      });\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId);\n      /* Todo implement custom dimensions\n        http://bit.ly/2yULdOO & http://bit.ly/2NS5nOE\n      // user mapping required\n      ga('set', {\n        'dimensionX': valueX,\n        'dimensionY': valueY,\n        'dimensionZ': valueZ\n      })\n      */\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded() {\n  return typeof ga === 'undefined';\n}\n\nfunction initialize$1(_ref4) {\n  var config = _ref4.config;\n  if (!config.trackingId) throw new Error('No google analytics trackingId defined');\n\n  if (gaNotLoaded()) {\n    /* eslint-disable */\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r;\n      i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments);\n      }, i[r].l = 1 * new Date();\n      a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n      a.async = 1;\n      a.src = g;\n      m.parentNode.insertBefore(a, m);\n    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n    /* eslint-enable */\n\n\n    ga('create', config.trackingId, 'auto');\n\n    if (config.debug) {\n      // Disable sends to GA http://bit.ly/2Ro0vTR\n      ga('set', 'sendHitTask', null);\n      window.ga_debug = {\n        trace: true\n      };\n    }\n  }\n}\n/**\n * Send page view to google analytics\n * @param  {string} [urlPath = location.pathname] - path of current path\n */\n\n\nfunction pageView$1(urlPath) {\n  if (gaNotLoaded()) return;\n  var path = urlPath || document.location.pathname;\n  ga('set', 'page', path);\n  ga('send', 'pageview');\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\n\nfunction trackEvent$1(eventData) {\n  if (gaNotLoaded()) return;\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = eventData.campaign || {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) data.campaignName = name;\n  if (source) data.campaignSource = source;\n  if (medium) data.campaignMedium = medium;\n  if (content) data.campaignContent = content;\n  if (keyword) data.campaignKeyword = keyword;\n  /* Send data to Google Analytics */\n\n  ga('send', 'event', data);\n  return data;\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\n\nfunction identifyVisitor$1(id) {\n  if (gaNotLoaded()) return;\n  if (id) ga('set', 'userId', id);\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n/* This module will shake out unused code + work in browser and node ðŸŽ‰ */\n\n\nvar index = googleAnalytics;\n/* Standalone API */\n// Initialize\n\nvar init = initialize$1;\nvar page = pageView$1;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\nexport default index;\nexport { init as initialize, page, track, identify };","map":null,"metadata":{},"sourceType":"module"}